/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dakmainstitute.view.managetest;

import dakmainstitute.controller.AttendenceController;
import dakmainstitute.controller.TestController;
import dakmainstitute.controller.TestMarksController;
import dakmainstitute.model.Attendence;
import dakmainstitute.model.Test;
import dakmainstitute.model.TestMarks;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shashi
 */
public class AddTestMarks extends JInternalFrame {

    int posission;
    DefaultTableModel dtm;
    Date d;
    DateFormat timeInstance;

    /**
     * Creates new form AddTestMarks
     */
    public AddTestMarks() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        final JTextField tf = (JTextField) testIdCombo.getEditor().getEditorComponent();
        tf.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == 10) {
                    for (int i = 0; i < testIdCombo.getItemCount(); i++) {
                        Test t = (Test) testIdCombo.getItemAt(i);
                        if (t.getTestId().equals(tf.getText())) {
                            testIdCombo.setSelectedIndex(i);
                            break;
                        }
                    }
                }
            }
        });

        datePicker.setToolTipText("Month/Date/Year");

        dtm = (DefaultTableModel) marksTable.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        districGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        stNameLabel = new javax.swing.JLabel();
        textIdLabel = new javax.swing.JLabel();
        testIdCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        marksTable = new javax.swing.JTable();
        stNameText = new javax.swing.JLabel();
        subjectLabelText = new javax.swing.JLabel();
        addTestButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        classLabelText1 = new javax.swing.JLabel();
        marksLabel = new javax.swing.JLabel();
        marksText = new javax.swing.JTextField();
        mataraRadioButton = new javax.swing.JRadioButton();
        galleRadioButton = new javax.swing.JRadioButton();
        thangallaRadioButton = new javax.swing.JRadioButton();
        datePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(252, 228, 228));

        titleLabel.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        titleLabel.setText("Add Test Marks");
        titleLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        stNameLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        stNameLabel.setText("Name");

        textIdLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        textIdLabel.setText("Test Id    :");

        testIdCombo.setEditable(true);
        testIdCombo.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        testIdCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                testIdComboItemStateChanged(evt);
            }
        });
        testIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testIdComboActionPerformed(evt);
            }
        });
        testIdCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                testIdComboKeyPressed(evt);
            }
        });

        marksTable.setBackground(new java.awt.Color(204, 204, 255));
        marksTable.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        marksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index No", "Student Name", "Marks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        marksTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(marksTable);

        stNameText.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        subjectLabelText.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        addTestButton.setBackground(new java.awt.Color(204, 255, 255));
        addTestButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        addTestButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shashi\\Desktop\\Icons by\\windows8_icons\\PNG\\Add\\add_file\\add_file-32.png")); // NOI18N
        addTestButton.setText("Add New Test");
        addTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTestButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shashi\\Desktop\\Icons by\\Save-icon.png")); // NOI18N
        saveButton.setText("Save\n");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cancelButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shashi\\Desktop\\Icons by\\delete.png")); // NOI18N
        cancelButton.setText("Cancel ");

        classLabelText1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        classLabelText1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        marksLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        marksLabel.setText("Add student marks");

        marksText.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        marksText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marksTextActionPerformed(evt);
            }
        });
        marksText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                marksTextKeyReleased(evt);
            }
        });

        mataraRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        districGroup.add(mataraRadioButton);
        mataraRadioButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mataraRadioButton.setText("Matara");
        mataraRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mataraRadioButtonActionPerformed(evt);
            }
        });

        galleRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        districGroup.add(galleRadioButton);
        galleRadioButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        galleRadioButton.setText("Galle");

        thangallaRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        districGroup.add(thangallaRadioButton);
        thangallaRadioButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        thangallaRadioButton.setText("Thangalla");
        thangallaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thangallaRadioButtonActionPerformed(evt);
            }
        });

        datePicker.setBackground(new java.awt.Color(255, 51, 102));
        datePicker.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });

        jLabel1.setText("Month/Date/Year");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addGap(62, 62, 62))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classLabelText1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addTestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectLabelText, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(stNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(marksText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addComponent(stNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(328, 328, 328)
                                        .addComponent(marksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(textIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(mataraRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(galleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(thangallaRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(testIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(32, 32, 32)))
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(classLabelText1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mataraRadioButton)
                    .addComponent(galleRadioButton)
                    .addComponent(thangallaRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(testIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addTestButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(textIdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectLabelText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stNameLabel)
                    .addComponent(marksLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(marksText)
                    .addComponent(stNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap(1118, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton, saveButton});

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void testIdComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_testIdComboItemStateChanged
    }//GEN-LAST:event_testIdComboItemStateChanged

    private void addTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTestButtonActionPerformed

        new AddTest().setVisible(true);
    }//GEN-LAST:event_addTestButtonActionPerformed

    private void testIdComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testIdComboKeyPressed
    }//GEN-LAST:event_testIdComboKeyPressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        for (int i = 0; i < marksTable.getRowCount(); i++) {
            TestMarks tesMarks = new TestMarks(testIdCombo.getSelectedItem().toString(), marksTable.getValueAt(i, 0) + "", marksTable.getValueAt(i, 2) + "");
            try {
                int res = TestMarksController.addTestMarks(tesMarks);
                if (res > 0) {
                    JOptionPane.showMessageDialog(this, "Success.....");
                } else {
                    JOptionPane.showMessageDialog(this, "fail.....");
                }
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(AddTestMarks.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void testIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testIdComboActionPerformed
        try {
            Date d = datePicker.getDate();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String date = df.format(d);

            DefaultTableModel dtm = (DefaultTableModel) marksTable.getModel();

            dtm.setRowCount(0);
            ArrayList<Attendence> studentList = AttendenceController.getSelectedStudent(classLabelText1.getText(), subjectLabelText.getText(), date);

            for (Attendence attendence : studentList) {
                String indexNo = attendence.getIndexNo();
                char ch = indexNo.charAt(0);
                char distric;
                if (mataraRadioButton.isSelected()) {
                    distric = 'M';
                } else if (galleRadioButton.isSelected()) {
                    distric = 'G';
                } else {
                    distric = 'T';
                }
                if (distric==ch) {
                    Object rows[] = {attendence.getIndexNo(), attendence.getStudent().getStudentName()};
                    dtm.addRow(rows);
                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddTestMarks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_testIdComboActionPerformed

    private void marksTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marksTextActionPerformed
        try {
            String marks = marksText.getText();
            if ("ab".equals(marks)) {
                dtm.setValueAt("AB", posission, 2);
            } else {
                dtm.setValueAt(marks, posission, 2);
            }
            posission++;
            setLabelName();
            marksText.setText("");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_marksTextActionPerformed

    private void marksTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marksTextKeyReleased
        String txt = marksText.getText();
        int caretPosition = marksText.getCaretPosition();
        if (!txt.matches("^[0-9]*{2}$")) {
            marksText.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            marksText.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_marksTextKeyReleased

    private void thangallaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thangallaRadioButtonActionPerformed
    }//GEN-LAST:event_thangallaRadioButtonActionPerformed

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerActionPerformed
        try {

            Date d = datePicker.getDate();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String date = df.format(d);
            ArrayList<Test> testId = TestController.getTestId(date);

            for (Test test : testId) {
                testIdCombo.addItem(test);
            }

            String testId1 = testIdCombo.getSelectedItem() + "";

            ArrayList<Test> subjectAndClz = TestController.getSubjectAndClz(testId1);

            for (Test test : subjectAndClz) {
                subjectLabelText.setText(test.getSubject());
                classLabelText1.setText(test.getClasses());

            }
            mataraRadioButton.requestFocus();

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddTestMarks.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_datePickerActionPerformed

    private void mataraRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mataraRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mataraRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddTestMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddTestMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddTestMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddTestMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddTestMarks().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTestButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel classLabelText1;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.ButtonGroup districGroup;
    private javax.swing.JRadioButton galleRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel marksLabel;
    private javax.swing.JTable marksTable;
    private javax.swing.JTextField marksText;
    private javax.swing.JRadioButton mataraRadioButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel stNameLabel;
    private javax.swing.JLabel stNameText;
    private javax.swing.JLabel subjectLabelText;
    private javax.swing.JComboBox testIdCombo;
    private javax.swing.JLabel textIdLabel;
    private javax.swing.JRadioButton thangallaRadioButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private void fillTestIdCombo() throws SQLException, ClassNotFoundException {
        ArrayList<Test> testList = TestController.getAllTestId();
        testIdCombo.removeAllItems();
        for (Test test : testList) {
            testIdCombo.addItem(test);
        }
    }

    private void setLabelName() {

        String indexNo = (String) dtm.getValueAt(posission, 0);
        String name = (String) dtm.getValueAt(posission, 1);
        stNameText.setText(indexNo + " - " + name);

    }
}
