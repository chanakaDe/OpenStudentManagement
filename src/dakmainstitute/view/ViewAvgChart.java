/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dakmainstitute.view;

import dakmainstitute.controller.StudentController;
import dakmainstitute.controller.SubjectController;
import dakmainstitute.controller.TestController;
import dakmainstitute.controller.TestMarksController;
import dakmainstitute.model.Subject;
import dakmainstitute.model.Test;
import dakmainstitute.model.TestMarks;
import dakmainstitute.view.managestudents.ViewAllStudents;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jfreechart.ViewEachStudentChart;
import jfreechart.ViewGirlsBoysAvgChart;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Shashi
 */
public class ViewAvgChart extends javax.swing.JFrame {

    /**
     * Creates new form ViewAvgChart
     */
    DefaultTableModel dtm;

    public ViewAvgChart() {
        initComponents();
        try {
            fillSubjectCombo();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ViewAvgChartForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        dtm = (DefaultTableModel) avgTable.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        layerdChartLabel = new org.jdesktop.swingx.JXLabel();
        lineChartLabel = new org.jdesktop.swingx.JXLabel();
        classLabel = new javax.swing.JLabel();
        classText = new javax.swing.JTextField();
        testTypeLabel2 = new javax.swing.JLabel();
        subjectCombo = new javax.swing.JComboBox();
        testTypeLabel1 = new javax.swing.JLabel();
        testTypeCombo = new javax.swing.JComboBox();
        testTypeLabel3 = new javax.swing.JLabel();
        districtCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        avgTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(java.awt.Color.white);
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0), 2));

        jXPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jXPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 3, true));

        layerdChartLabel.setBackground(new java.awt.Color(255, 255, 255));
        layerdChartLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dakmainstitute/icon/templateRealAppWizBanner.png"))); // NOI18N
        layerdChartLabel.setText("View Layerd Chart");
        layerdChartLabel.setToolTipText("View layerd chart of student's marks avarage");
        layerdChartLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        layerdChartLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        layerdChartLabel.setTextAlignment(org.jdesktop.swingx.JXLabel.TextAlignment.CENTER);
        layerdChartLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        layerdChartLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                layerdChartLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                layerdChartLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                layerdChartLabelMouseExited(evt);
            }
        });

        lineChartLabel.setBackground(new java.awt.Color(255, 255, 255));
        lineChartLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dakmainstitute/icon/line_chart-48.png"))); // NOI18N
        lineChartLabel.setText(" View Line Chart");
        lineChartLabel.setToolTipText("View line chart of student's marks avarage");
        lineChartLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lineChartLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lineChartLabel.setTextAlignment(org.jdesktop.swingx.JXLabel.TextAlignment.CENTER);
        lineChartLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lineChartLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lineChartLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lineChartLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lineChartLabelMouseExited(evt);
            }
        });

        classLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        classLabel.setText("Class       :");

        classText.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        classText.setForeground(new java.awt.Color(204, 0, 0));
        classText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classTextActionPerformed(evt);
            }
        });
        classText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                classTextKeyPressed(evt);
            }
        });

        testTypeLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        testTypeLabel2.setText("Subject    :");

        subjectCombo.setBackground(new java.awt.Color(153, 204, 255));
        subjectCombo.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        subjectCombo.setForeground(new java.awt.Color(153, 0, 0));
        subjectCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectComboActionPerformed(evt);
            }
        });
        subjectCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                subjectComboKeyPressed(evt);
            }
        });

        testTypeLabel1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        testTypeLabel1.setText("Test Type:");

        testTypeCombo.setBackground(new java.awt.Color(153, 204, 255));
        testTypeCombo.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        testTypeCombo.setForeground(new java.awt.Color(153, 0, 0));
        testTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Revision", "Theory" }));
        testTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testTypeComboActionPerformed(evt);
            }
        });
        testTypeCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                testTypeComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                testTypeComboKeyReleased(evt);
            }
        });

        testTypeLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        testTypeLabel3.setText("District    :");

        districtCombo.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        districtCombo.setForeground(new java.awt.Color(153, 0, 0));
        districtCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Matara", "Galle", "Thangalla" }));
        districtCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                districtComboActionPerformed(evt);
            }
        });
        districtCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                districtComboKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jXPanel1Layout = new javax.swing.GroupLayout(jXPanel1);
        jXPanel1.setLayout(jXPanel1Layout);
        jXPanel1Layout.setHorizontalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addComponent(layerdChartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lineChartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testTypeLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(classLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addComponent(classText, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(testTypeLabel3))
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addComponent(subjectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(testTypeLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(districtCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jXPanel1Layout.setVerticalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classLabel)
                    .addComponent(testTypeLabel3)
                    .addComponent(districtCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testTypeLabel1)
                    .addComponent(subjectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testTypeLabel2))
                .addContainerGap())
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(layerdChartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lineChartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        avgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Test Id", "Total Avarage", "Girl's Avarage", "Boy's Avarage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        avgTable.setToolTipText("Avarage table");
        avgTable.setRowHeight(25);
        jScrollPane2.setViewportView(avgTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void districtComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_districtComboKeyPressed
        if (evt.getKeyCode() == 10) {
            testTypeCombo.requestFocus();
        }
    }//GEN-LAST:event_districtComboKeyPressed

    private void districtComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_districtComboActionPerformed
        testTypeCombo.requestFocus();
    }//GEN-LAST:event_districtComboActionPerformed

    private void testTypeComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testTypeComboKeyReleased
    }//GEN-LAST:event_testTypeComboKeyReleased

    private void testTypeComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testTypeComboKeyPressed
        if (evt.getKeyCode() == 10) {
            DefaultTableModel dtm = (DefaultTableModel) avgTable.getModel();
            dtm = (DefaultTableModel) avgTable.getModel();
            ArrayList<Test> testList = null;
            try {
                testList = TestController.getTestId(classText.getText(), subjectCombo.getSelectedItem() + "", testTypeCombo.getSelectedItem() + "");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ViewAvgChartForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            int possision = 0;
            for (Test test : testList) {

                Object[] row = {test.getTestId()};
                dtm.addRow(row);
                try {
                    int count = 0;
                    double total = 0;
                    double boysTotal = 0;
                    double girlsTotal = 0;
                    List<Double> list = new ArrayList<>();
                    ArrayList<TestMarks> testMarksList = TestMarksController.getStudentMarks(test.getTestId(), districtCombo.getSelectedItem() + "");
                    for (TestMarks testMarks : testMarksList) {
                        total += Double.parseDouble(testMarks.getMarks() + "");
                        list.add(Double.parseDouble(testMarks.getMarks() + ""));
                        count++;
                    }
                    double totAvg = total / count;
                    dtm.setValueAt(totAvg, possision, 1);

                    int girlsCount = 0;
                    int boysCount = 0;
                    List<Double> boysList = new ArrayList<>();
                    for (TestMarks testMarks : testMarksList) {
                        String index = testMarks.getIndexNo();
                        char ch = index.charAt(2);
                        if (ch == 'B') {
                            boysTotal += Double.parseDouble(testMarks.getMarks() + "");
                            boysList.add(Double.parseDouble(testMarks.getMarks() + ""));
                            boysCount++;
                        }
                    }
                    double boysAvg = boysTotal / boysCount;
                    dtm.setValueAt(boysAvg, possision, 3);

                    List<Double> girlsList = new ArrayList<>();
                    for (TestMarks testMarks : testMarksList) {
                        String index = testMarks.getIndexNo();
                        char ch = index.charAt(2);
                        if (ch == 'G') {
                            girlsTotal += Double.parseDouble(testMarks.getMarks() + "");
                            girlsList.add(Double.parseDouble(testMarks.getMarks() + ""));
                            girlsCount++;
                        }
                    }
                    double girlsAvg = girlsTotal / girlsCount;
                    dtm.setValueAt(girlsAvg, possision, 2);

                    possision++;

                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ViewAvgChartForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_testTypeComboKeyPressed

    private void testTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testTypeComboActionPerformed
    }//GEN-LAST:event_testTypeComboActionPerformed

    private void subjectComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subjectComboKeyPressed
        if (evt.getKeyCode() == 10) {
            districtCombo.requestFocus();
        }
    }//GEN-LAST:event_subjectComboKeyPressed

    private void subjectComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectComboActionPerformed
    }//GEN-LAST:event_subjectComboActionPerformed

    private void classTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_classTextKeyPressed
        if (evt.getKeyCode() == 10) {
            String clz = classText.getText();
            try {
                boolean b = StudentController.isClassAvailable(clz + "A/L");
                if (b == true) {
                    classText.setText(clz + "A/L");
                    subjectCombo.requestFocus();
                } else {
                    classText.setText("");

                }

            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ViewRanges.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_classTextKeyPressed

    private void classTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classTextActionPerformed
    }//GEN-LAST:event_classTextActionPerformed

    private void lineChartLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lineChartLabelMouseExited
        lineChartLabel.setBackground(Color.white);
    }//GEN-LAST:event_lineChartLabelMouseExited

    private void lineChartLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lineChartLabelMouseEntered
        lineChartLabel.setBackground(Color.CYAN);
    }//GEN-LAST:event_lineChartLabelMouseEntered

    private void layerdChartLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layerdChartLabelMouseExited
        layerdChartLabel.setBackground(Color.white);
    }//GEN-LAST:event_layerdChartLabelMouseExited

    private void layerdChartLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layerdChartLabelMouseEntered
        layerdChartLabel.setBackground(Color.CYAN);
    }//GEN-LAST:event_layerdChartLabelMouseEntered

    private void layerdChartLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layerdChartLabelMouseClicked
        int row = avgTable.getSelectedRow();
        ArrayList<String> testId = null;
        ArrayList<Double> totAvg = null;
        ArrayList<Double> girlsAvg = null;
        ArrayList<Double> boysAvg = null;
        
        for (int i = 0; i < avgTable.getRowCount(); i++) {
           // System.out.println(avgTable.getValueAt(i, 0).toString());
            testId.add(avgTable.getValueAt(i, 0).toString());
            totAvg.add(Double.parseDouble(avgTable.getValueAt(i, 1)+""));
            girlsAvg.add(Double.parseDouble(avgTable.getValueAt(i, 2)+""));
            boysAvg.add(Double.parseDouble(avgTable.getValueAt(i, 3)+""));
            
        }
        try {
            ViewGirlsBoysAvgChart.viweGirlsAvgChart(testId,totAvg,girlsAvg,boysAvg);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ViewAvgChart.class.getName()).log(Level.SEVERE, null, ex);
        }




    }//GEN-LAST:event_layerdChartLabelMouseClicked

    private void lineChartLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lineChartLabelMouseClicked
        JRTableModelDataSource ds = new JRTableModelDataSource(dtm);
        try {
            JasperReport jr = JasperCompileManager.compileReport("./src/dakmainstitiute/reports/ViewAvgChart.jrxml");
            Map<String, Object> data = new HashMap<>();
            JasperPrint fillReport = JasperFillManager.fillReport(jr, data, ds);
            JasperViewer.viewReport(fillReport);

        } catch (JRException ex) {
            Logger.getLogger(ViewRanges.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lineChartLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAvgChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAvgChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAvgChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAvgChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewAvgChart().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable avgTable;
    private javax.swing.JLabel classLabel;
    private javax.swing.JTextField classText;
    private javax.swing.JComboBox districtCombo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXLabel layerdChartLabel;
    private org.jdesktop.swingx.JXLabel lineChartLabel;
    private javax.swing.JComboBox subjectCombo;
    private javax.swing.JComboBox testTypeCombo;
    private javax.swing.JLabel testTypeLabel1;
    private javax.swing.JLabel testTypeLabel2;
    private javax.swing.JLabel testTypeLabel3;
    // End of variables declaration//GEN-END:variables

    private void fillSubjectCombo() throws SQLException, ClassNotFoundException {
        ArrayList<Subject> subjectList = SubjectController.getAllSubject();
        //subjectList.removeAllItems();
        for (Subject subject : subjectList) {
            subjectCombo.addItem(subject);

        }
    }
}
